name: Checks-and-tests

on: [push, pull_request]

jobs:
  checks-and-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=30s 
          --health-timeout=5s 
          --health-retries=3

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Set up Go
        uses: actions/setup-go@v5.1.0
        with:
          go-version: 1.23

      - name: Verify dependencies
        run: go mod verify

      - name: Build server
        run: go build -o gophkeeper-server -v ./cmd/server/

      - name: Build client
        run: go build -o gophkeeper-client -v ./cmd/client/

      - name: Run go vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Install golint
        run: go install golang.org/x/lint/golint@latest

      - name: Run golint
        run: golint ./...

      - name: Start Minio with certificates
        run: |
          docker run -d --name minio \
            -p 9000:9000 -p 9001:9001 \
            -e MINIO_ACCESS_KEY=minioadmin \
            -e MINIO_SECRET_KEY=minioadmin \
            -v minio_data:/data \
            -v ${{ github.workspace }}/certs:/root/.minio
            minio/minio server /data --console-address ":9001" --certs-dir /root/.minio

      - name: Run tests
        run:  go test -cover -coverprofile=${{ github.workspace }}/coverage/coverage.out ./... -vet=off ./...

      - name: Check coverage
        run: go tool cover -func=${{ github.workspace }}/coverage/coverage.out
